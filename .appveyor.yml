image:
- Visual Studio 2015 
#Visual Studio 2017 does not contain some mingw installations
- Ubuntu

platform:
  - x86
#  - Any CPU

environment:
  MINGW_DIR: C:\MinGW\bin 
  APPVEYOR_RDP_PASSWORD: aA45-#nuto
  #so Windows finds the MINGW-files
  #MINGW_DIR: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin #doesn't seem to work
  #MinGW bin directory

#clone_depth: 3

build: off
 #disables MSBuild functionality

init:
 - cmd: set PATH=%MINGW_DIR%;%PATH%
# - cmd: set
# #- sh: sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" > /dev/null
# #- sh: sudo apt-get -yq update > /dev/null
# #- sh: sudo apt-get install -yq --no-install-suggests --no-install-recommends gfortran-6 > /dev/null
# #- sh: export FC=/usr/bin/gfortran-6


# # before_build: #not tested yet
  # # # Workaround for CMake not wanting sh.exe on PATH for MinGW: https://github.com/jibsen/brieflz/blob/0c6fb73984f11e697dfaade5cdc5e291c1655c67/appveyor.yml
  # # - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  # # - set PATH=C:\MinGW\bin;%PATH%
  # # - mkdir build
  # # - cd build
  # # - cmake -DCMAKE_BUILD_TYPE=%CONFIGURATION% -G "%GENERATOR%" ..

- ps: |
    if ($isLinux) {
      Write-Host "This is Linux!"
    } else {
      Write-Host "This is NOT a Linux!"
      iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    }
# #build_script: cmake --build . --config %CONFIGURATION%

install:
- sh: touch tt
- ps: Write-Host "This is PowerShell"
- cmd: ECHO this is batch, checking path...
- cmd: dir
- cmd: dir %MINGW_DIR%
- cmd: dir C:\MinGW\msys\1.0
- cmd: where mingw32-make.exe
- cmd: mingw32-make.exe --version

# # # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
# # #activate RemoteDesktop access
# # #- cmd: C:\ProgramData\msys32\usr\bin\bash -l -c "echo we found bash!" #apparently not the correct path
# #- cmd: gfortran --version #doesn't work
# - sh: echo this is shell
# - sh: gfortran --version


  
# # for:
# # - ps: |
    # # if ($isLinux) {
      # # Write-Host "This is Linux!"
    # # } else {
      # # Write-Host "This is NOT a Linux!"
    # # }

  # # matrix:
    # # only:
      # # - image: Ubuntu

   
# #- echo Ubuntu build script
# - cmd: ECHO this is batch-build2
# - cmd: make --version
# - cmd: make all OUTDIR=build_win


# #- cmd: cmake -G "MinGW Makefiles" -DCMAKE_SH="CMAKE_SH-NOTFOUND" ..
# #- sh: cmake ..
# #
# #- cmake --build .
# - sh: Building binaries for Ubuntu...
# - sh: make --version
# - sh: make all
# #test_script: ctest -V



artifacts:
  - path: WASA-SED/src
    name: src
    type: zip

  - path: tt
    name: tt
    type: zip

  # - path: build/bin
    # name: WASA-SEDexec_ubuntu
    # type: zip

  # - path: build_win/bin
    # name: WASA-SEDexec_windows
    # type: zip


deploy:
  release: myproduct-v$(appveyor_build_version)
  description: 'Release description'
  provider: GitHub
#  auth_token:
#    secure: <your encrypted token> # your encrypted token from GitHub
  artifact: tt.zip            # upload all NuGet packages to release assets
  draft: false
  prerelease: true
#  on:
#    branch: master                 # release from master branch only
#    appveyor_repo_tag: true        # deploy on tag push only
