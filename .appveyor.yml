image:
- Visual Studio 2017
- Ubuntu

environment:
  MINGW_DIR: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin
#so Windows finds the MINGW-files

#clone_depth: 3

build: off
 #disables MSBuild functionality

init:
- cmd: set PATH=%MINGW_DIR%;%PATH%
- cmd: set
#- sh: sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" > /dev/null
#- sh: sudo apt-get -yq update > /dev/null
#- sh: sudo apt-get install -yq --no-install-suggests --no-install-recommends gfortran-6 > /dev/null
#- sh: export FC=/usr/bin/gfortran-6

install:
- cmd: ECHO this is batch
- ps: Write-Host "This is PowerShell"
#- cmd: gfortran --version #doesn't work
- sh: echo this is shell
- sh: gfortran --version


  
# for:
# - ps: |
    # if ($isLinux) {
      # Write-Host "This is Linux!"
    # } else {
      # Write-Host "This is NOT a Linux!"
    # }

  # matrix:
    # only:
      # - image: Ubuntu

  # build_script:
  
  
# - ps: |
    # if ($isLinux) {
      # Write-Host "This is Linux!"
    # } else {
      # Write-Host "This is NOT a Linux!"
    # }  
  
#- echo Ubuntu build script
- cmd: ECHO this is batch-build2
- cmd: make --version
- cmd: make all OUTDIR=build_win
- sh: echo this is shell-build2


#- cmd: cmake -G "MinGW Makefiles" -DCMAKE_SH="CMAKE_SH-NOTFOUND" ..
#- sh: cmake ..
#
#- cmake --build .
- sh: make --version
- sh: make all
#test_script: ctest -V


artifacts:
  - path: build/bin
    name: WASA-SEDexec_ubuntu
    type: zip

  - path: build_win/bin
    name: WASA-SEDexec_windows
    type: zip

deploy:
- provider: Environment
  name: WASA-SEDexec_ubuntu
  on:
    branch: unit_sedigraph
- provider: Environment
  name: WASA-SEDexec_windows
  on:
    branch: unit_sedigraph # only this will trigger a deploymentplatform
    platform: x86
#    APPVEYOR_REPO_TAG: true # condition will never be evaluated for annotated tag