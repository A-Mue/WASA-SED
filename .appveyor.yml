image:
- Visual Studio 2015 
#Visual Studio 2017 does not contain some mingw installations
- Ubuntu

platform:
  - x86
#  - Any CPU

environment:
  MINGW_DIR: C:\MinGW\bin 
  MINGW64_DIR: C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin 
  MSYS_DIR: C:\MinGW\msys\1.0\bin 
  MSYS2_DIR: C:\msys64\mingw32\bin 

  #APPVEYOR_RDP_PASSWORD: aA45-#nuto

#clone_depth: 3

build: off
 #disables MSBuild functionality

init:
# - cmd: set

 # - ps: |
    # if ($isLinux) {
      # Write-Host "This is Linux!"
    # } else {
      # Write-Host "This is NOT Linux!"
      # iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')) #cannot connect (firewall up?)
    # }

install:
  - sh: touch tt.txt

    
# #- echo Ubuntu build script
# - cmd: make --version
# - cmd: make all OUTDIR=build_win

  - cmd: ECHO this is batch-build2
#try mingw
#fails (make too old?)
  # - cmd: set PATH=%MINGW_DIR%;%PATH%
  # - cmd: where mingw32-make.exe
  # - cmd: mingw32-make.exe --version
  # - cmd: mingw32-make.exe all OUTDIR=build_win
 
 # #try mingw64 - works!
  # - cmd: set PATH=%MINGW64_DIR%;%PATH%
  # - cmd: where mingw32-make.exe
  # - cmd: mingw32-make.exe --version
  # - cmd: mingw32-make.exe all OUTDIR=build_win_mingw64
  
 # #try msys - fails in update_revision.bat - needs sh commands?
  # - cmd: set PATH=%MSYS_DIR%;%PATH%
  # - cmd: where make.exe
  # - cmd: make.exe --version
  # - cmd: make.exe all OUTDIR=build_win

#try msys2 - works!
  - cmd: set PATH=%MSYS2_DIR%;%PATH%
#  - cmd: where mingw32-make.exe
#  - cmd: mingw32-make.exe --version
  - cmd: mingw32-make.exe all OUTDIR=build_win_msys2
  - cmd: dir build_win_msys2\bin


# #test_script: ctest -V


artifacts:
  - path: tt.txt
    name: tt
    type: zip

  # - path: build/bin
    # name: WASA-SEDexec_ubuntu
    # type: zip

  - path: build_win_msys2/bin/*.*
    name: WASA-SEDexec_windows_msys2
    type: zip

  - path: build_win_msys2\bin\*.*
    name: WASA-SEDexec_windows_msys2_2
    type: zip


deploy:
  environment: Ubuntu_binary  
  release: autorelease-v$(appveyor_build_version)-t$(APPVEYOR_REPO_TAG_NAME)
  tag: build_$(appveyor_build_version)
  description: 'automatic build from Appveyor'
  provider: GitHub
  auth_token:
    secure: meYLNf3tmP33dPMobNw70vtLNzgx5HiBEzPGSxl4575gHYEI2OtGgthLNxuz62xg
  artifacts: tt, SEDexec_windows_msys2, SEDexec_windows_msys2_2
  draft: true
  prerelease: true
  force_update: true
  on:
    branch: unit_sedigraph                 # release from unit_sedigraph branch only
#    appveyor_repo_tag: true        # deploy on tag push only

#Error creating GitHub release: Provider setting not found or it's value is empty. If secure setting is used #please check that value was encrypted (or YAML was exported) while being logged under correct account.
#Parameter name: auth_token

# on_finish:
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
