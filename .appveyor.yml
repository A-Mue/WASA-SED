image:
- Visual Studio 2015 
#Visual Studio 2017 does not contain some mingw installations
- Ubuntu

platform:
  - x86
#  - Any CPU

environment:
  MINGW_DIR: C:\MinGW\bin 
  MINGW64_DIR: C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin 
  MSYS_DIR: C:\MinGW\msys\1.0\bin 
  MSYS2_DIR: C:\msys64\mingw32\bin 

  #APPVEYOR_RDP_PASSWORD: aA45-#nuto

#clone_depth: 3

build: off
 #disables MSBuild functionality

init:
# - cmd: set
# #- sh: sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" > /dev/null
# #- sh: sudo apt-get -yq update > /dev/null
# #- sh: sudo apt-get install -yq --no-install-suggests --no-install-recommends gfortran-6 > /dev/null
# #- sh: export FC=/usr/bin/gfortran-6


# # before_build: #not tested yet
  # # # Workaround for CMake not wanting sh.exe on PATH for MinGW: https://github.com/jibsen/brieflz/blob/0c6fb73984f11e697dfaade5cdc5e291c1655c67/appveyor.yml
  # # - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  # # - set PATH=C:\MinGW\bin;%PATH%
  # # - mkdir build
  # # - cd build
  # # - cmake -DCMAKE_BUILD_TYPE=%CONFIGURATION% -G "%GENERATOR%" ..

 # - ps: |
    # if ($isLinux) {
      # Write-Host "This is Linux!"
    # } else {
      # Write-Host "This is NOT Linux!"
      # iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1')) #cannot connect (firewall up?)
    # }

install:
  - sh: touch tt
  - cmd: ECHO this is batch, checking path...
  #- cmd: dir
  #- cmd: dir %MSYS_DIR% #contains make GNU Make 3.81
  #- cmd: dir %MSYS2_DIR% #contains mingw32-make.exe
  #- cmd: dir %MINGW_DIR% #mingw32-make.exe GNU Make 3.82.90
  #- cmd: dir %MINGW64_DIR% #contains mingw32-make.exe GNU Make 4.2.1
  
# # # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
# # #activate RemoteDesktop access
# # #- cmd: C:\ProgramData\msys32\usr\bin\bash -l -c "echo we found bash!" #apparently not the correct path
# #- cmd: gfortran --version #doesn't work
# - sh: echo this is shell
# - sh: gfortran --version

# # for:
# # - ps: |
    # # if ($isLinux) {
      # # Write-Host "This is Linux!"
    # # } else {
      # # Write-Host "This is NOT a Linux!"
    # # }

  # # matrix:
    # # only:
      # # - image: Ubuntu

   
# #- echo Ubuntu build script
  - cmd: ECHO this is batch-build2
# - cmd: make --version
# - cmd: make all OUTDIR=build_win

#try mingw
#fails (make too old?)
  # - cmd: set PATH=%MINGW_DIR%;%PATH%
  # - cmd: where mingw32-make.exe
  # - cmd: mingw32-make.exe --version
  # - cmd: mingw32-make.exe all OUTDIR=build_win
 
 # #try mingw64 - works!
  # - cmd: set PATH=%MINGW64_DIR%;%PATH%
  # - cmd: where mingw32-make.exe
  # - cmd: mingw32-make.exe --version
  # - cmd: mingw32-make.exe all OUTDIR=build_win
  
 # #try msys - fails in update_revision.bat - needs sh commands?
  # - cmd: set PATH=%MSYS_DIR%;%PATH%
  # - cmd: where make.exe
  # - cmd: make.exe --version
  # - cmd: make.exe all OUTDIR=build_win

#try msys2 
  - cmd: set PATH=%MSYS2_DIR%;%PATH%
  - cmd: where mingw32-make.exe
  - cmd: mingw32-make.exe --version
  - cmd: mingw32-make.exe all OUTDIR=build_win



# #- cmd: cmake -G "MinGW Makefiles" -DCMAKE_SH="CMAKE_SH-NOTFOUND" ..
# #- sh: cmake ..
# #
# #- cmake --build .
# - sh: Building binaries for Ubuntu...
# - sh: make --version
# - sh: make all
# #test_script: ctest -V


artifacts:
  - path: WASA-SED/src
    name: src
    type: zip

  - path: tt
    name: tt
    type: zip

  # - path: build/bin
    # name: WASA-SEDexec_ubuntu
    # type: zip

  # - path: build_win/bin
    # name: WASA-SEDexec_windows
    # type: zip


deploy:
  environment: Ubuntu_binary  
  release: autorelease-v$(appveyor_build_version)-t$(APPVEYOR_REPO_TAG_NAME)
  description: 'Release description from appveyor'
  provider: GitHub
  auth_token:
    secure: meYLNf3tmP33dPMobNw70vtLNzgx5HiBEzPGSxl4575gHYEI2OtGgthLNxuz62xg
  artifact: tt.zip            
  draft: false
  prerelease: true
  on:
    branch: unit_sedigraph2                 # release from unit_sedigraph branch only
#    appveyor_repo_tag: true        # deploy on tag push only

#Error creating GitHub release: Provider setting not found or it's value is empty. If secure setting is used #please check that value was encrypted (or YAML was exported) while being logged under correct account.
#Parameter name: auth_token

# on_finish:
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
